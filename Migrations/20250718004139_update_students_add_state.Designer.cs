// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using p_proyect.Modules;

namespace p_proyect.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250718004139_update_students_add_state")]
    partial class update_students_add_state
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("p_proyect.Modules.Entidades.Adeudo_Curso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Adeudo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Id_Curso")
                        .HasColumnType("bigint");

                    b.Property<long>("Id_Estudiante")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Restante_A_Pagar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total_Pagado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Curso");

                    b.HasIndex("Id_Estudiante");

                    b.ToTable("Adeudos_Cursos");
                });

            modelBuilder.Entity("p_proyect.Modules.Entidades.Cursos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad_De_Estudiantes")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo_Del_Curso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dia_Curso")
                        .HasColumnType("int");

                    b.Property<int>("Estado_Actual_Del_Curso")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Hora_De_Finalizacion")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Hora_De_Inicio")
                        .HasColumnType("time");

                    b.Property<decimal>("Inscripcion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Profesor_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Profesor_Id");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("p_proyect.Modules.Entidades.Empleado_Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido_del_Administrador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_del_Administrador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_de_Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pass_confirm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empleado_Admins");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Apellido_del_Administrador = "admin",
                            Estado = 1,
                            Nombre_del_Administrador = "Administrador",
                            Numero_de_Telefono = "8494061420",
                            Pass = "admin123",
                            Pass_confirm = "admin123"
                        });
                });

            modelBuilder.Entity("p_proyect.Modules.Entidades.Estudiante", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Cantidad_De_Cursos_A_Los_Que_Esta_Inscrito")
                        .HasColumnType("smallint");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("Estado_Actual_Del_Estudiante")
                        .HasColumnType("int");

                    b.Property<int>("Estudia_En_La_Actualidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_De_Inscripcion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_De_insercion_al_sistema")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id_Empleado")
                        .HasColumnType("bigint");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nivel_De_Educacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_del_tutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefono_del_tutor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Empleado");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("p_proyect.Modules.Entidades.Profesor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cursos_Impartidos_Count")
                        .HasColumnType("int");

                    b.Property<int>("Estados_Generales")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_De_Integracion_al_Sistema")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_de_agregado_al_sistema")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_De_Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pago_Total_De_Comision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Porcentaje_De_Comision")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Profesors");
                });

            modelBuilder.Entity("p_proyect.Modules.Entidades.R_Estudiantes_Cursos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado_Estudiante")
                        .HasColumnType("int");

                    b.Property<long>("Id_Curso")
                        .HasColumnType("bigint");

                    b.Property<long>("Id_Estudiante")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id_Curso");

                    b.HasIndex("Id_Estudiante");

                    b.ToTable("R_Estudiantes_Cursos");
                });

            modelBuilder.Entity("p_proyect.Modules.Entidades.Adeudo_Curso", b =>
                {
                    b.HasOne("p_proyect.Modules.Entidades.Cursos", "Curso")
                        .WithMany()
                        .HasForeignKey("Id_Curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("p_proyect.Modules.Entidades.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("Id_Estudiante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("p_proyect.Modules.Entidades.Cursos", b =>
                {
                    b.HasOne("p_proyect.Modules.Entidades.Profesor", "Profesor")
                        .WithMany("Cursos_Impartidos")
                        .HasForeignKey("Profesor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("p_proyect.Modules.Entidades.Estudiante", b =>
                {
                    b.HasOne("p_proyect.Modules.Entidades.Empleado_Admin", "Empleado")
                        .WithMany()
                        .HasForeignKey("Id_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("p_proyect.Modules.Entidades.R_Estudiantes_Cursos", b =>
                {
                    b.HasOne("p_proyect.Modules.Entidades.Cursos", "Cursos")
                        .WithMany()
                        .HasForeignKey("Id_Curso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("p_proyect.Modules.Entidades.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("Id_Estudiante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
